/*24-02-26
 솔루션 탐색기 - > 모든 파일 표시로 변경
프로젝트 우클릭 ->속성 -> 중간 디렉토리를 변경
프로젝트 우클릭 ->속성 ->c++20
솔루션(sln) 파일 , 프로젝트(vcxproj) 파일 직접 notepad로 열어서 분석
프로젝트 : xml이라는 문법으로 만들어져있다.

빌드(Build)
실행 파일을 만드는 과정
- 전처리(Preprocess) : 소스코드에 담긴 메타정보를 처리한다.
- 컴파일(Compile) : 소스코드를 머신이 읽을 수 있는 파일로 변환한다.
                    (기계어를 어셈블리어로 변환도 포함)
- 링크(Link) : 컴파일 단계에서 변환한 여러 Object 파일을 Application으로 합친다.
                (우리가 작성한 소스코드들 + 라이브러리 등을 병합)

pba 파일
-디버깅을 위한정보
-실제 유저에게 배포할때는 절대로 포함x

컴파일러
컴파일러 제조사가 컴파일러를 표준 C++문법을 따라서 컴파일 되게 구현한 프로그램
- MSVC(MicroSoft Visual C,C++) 컴파일러
- GCC


/*
include 전처리지시자
include 뒤에 나오는 파일을 포함하겠다.
포함이란 ? include 위치에 해당 파일을 복사 붙혀넣기 한다.

*/

#include <iostream>

int main()
{
    //브레이크 포인트(Break point) : F5로 실행 (디버거를 붙혀서)하는 경우 해당위치에 도달하면
    //자동으로 멈춰준다
    //-원하는 라인에 캐럿을 두고 F9 으로 실행
    // -또는 원하는 라인 가장 왼쪽에 마우스를 올리기
    //이후 F10으로 한줄씩 실행
#pragma region 01.cout,cin
    {
        //namesapce : 여러 단체,기업에 코드를 수정
        //이름이 중복될 가능성이 크기 때문에 추가적인 구분을 위해 namespace라는걸 추가

        std::cout << "Hello World!\n";
    }
#pragma endregion
}

// 프로그램 실행: <Ctrl+F5> 또는 [디버그] > [디버깅하지 않고 시작] 메뉴
// 프로그램 디버그: <F5> 키 또는 [디버그] > [디버깅 시작] 메뉴

// 시작을 위한 팁: 
//   1. [솔루션 탐색기] 창을 사용하여 파일을 추가/관리합니다.
//   2. [팀 탐색기] 창을 사용하여 소스 제어에 연결합니다.
//   3. [출력] 창을 사용하여 빌드 출력 및 기타 메시지를 확인합니다.
//   4. [오류 목록] 창을 사용하여 오류를 봅니다.
//   5. [프로젝트] > [새 항목 추가]로 이동하여 새 코드 파일을 만들거나, [프로젝트] > [기존 항목 추가]로 이동하여 기존 코드 파일을 프로젝트에 추가합니다.
//   6. 나중에 이 프로젝트를 다시 열려면 [파일] > [열기] > [프로젝트]로 이동하고 .sln 파일을 선택합니다.
